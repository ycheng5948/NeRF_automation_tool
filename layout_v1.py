# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\user\Desktop\UI_practice_folder\layout_v1.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *

open_tree = 0

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(569, 333)
# Main Window layout
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(410, 180, 111, 91))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")

# Buttons' layout
        self.ButtonsLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.ButtonsLayout.setContentsMargins(0, 0, 0, 0)
        self.ButtonsLayout.setObjectName("ButtonsLayout")
# Convert Button
        self.Convert = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.Convert.setObjectName("Convert Only")
        self.ButtonsLayout.addWidget(self.Convert)
# Run Button
        self.Run = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.Run.setObjectName("Run")
        self.ButtonsLayout.addWidget(self.Run)
# Checkboxes' layout
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(40, 180, 221, 91))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.CheckboxLayout_ = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.CheckboxLayout_.setContentsMargins(0, 0, 0, 0)
        self.CheckboxLayout_.setObjectName("CheckboxLayout")
# Filter checkbox
        self.Filter = QtWidgets.QCheckBox(self.verticalLayoutWidget_2)
        self.Filter.setToolTip("Filter blurry images, default checked")
        self.Filter.setChecked(True)
        self.Filter.setObjectName("Filter")
        self.CheckboxLayout_.addWidget(self.Filter)
# Outdoor checkbox
        self.outdoor = QtWidgets.QCheckBox(self.verticalLayoutWidget_2)
        self.outdoor.setToolTip("Add aabb_scale in transformed json file and set to 8")
        self.outdoor.setObjectName("outdoor")
        self.CheckboxLayout_.addWidget(self.outdoor)
# OpenNGP checkbox
        # self.openNGP = QtWidgets.QCheckBox(self.verticalLayoutWidget_2)
        # self.openNGP.setToolTip("Will automatically open Instant-NeRF after converting")
        # self.openNGP.setObjectName("openNGP")
        # self.CheckboxLayout_.addWidget(self.openNGP)
# Main Layout
        self.gridLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(40, 30, 481, 121))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.MainLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.MainLayout.setContentsMargins(0, 0, 0, 0)
        self.MainLayout.setObjectName("MainLayout")
# Set Button
        self.set = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.set.setObjectName("set")
        self.MainLayout.addWidget(self.set, 0, 2, 1, 1)
# Project Name
        self.ProjectName = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.ProjectName.setFont(font)
        self.ProjectName.setObjectName("ProjectName")
        self.MainLayout.addWidget(self.ProjectName, 0, 0, 1, 1)
# Project Name Input
        self.ProjectNameInput = QtWidgets.QLineEdit(self.gridLayoutWidget)
        self.ProjectNameInput.setObjectName("ProjectNameInput")
        self.MainLayout.addWidget(self.ProjectNameInput, 0, 1, 1, 1)
# Browse File Button
        self.BrowseFile = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.BrowseFile.setObjectName("BrowseFile")
        self.MainLayout.addWidget(self.BrowseFile, 1, 2, 1, 1)

        self.BrowseFile.clicked.connect(self.show_popup)
# Browse File Name Text
        self.BrowseFile_2 = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.BrowseFile_2.setFont(font)
        self.BrowseFile_2.setText("")
        self.BrowseFile_2.setObjectName("BrowseFile_2")
        self.MainLayout.addWidget(self.BrowseFile_2, 1, 0, 1, 1)
# StatusBar Layout
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 569, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.Convert.setText(_translate("MainWindow", "Convert Only"))
        self.Run.setText(_translate("MainWindow", "Run"))
        self.Filter.setText(_translate("MainWindow", "Filter blurry images"))
        self.outdoor.setText(_translate("MainWindow", "Outdoor scene"))
        # self.openNGP.setText(_translate("MainWindow", "Open Instant-NeRF after converting"))
        self.set.setText(_translate("MainWindow", "Set"))
        self.ProjectName.setText(_translate("MainWindow", "Project Name:"))
        self.BrowseFile.setText(_translate("MainWindow", "Browse File"))

# show a popup QTreeView for users to browse and select file

    def show_popup(self):
        global open_tree
        open_tree = 1

class Ui_TreeWindow(object):
    def setupUi(self, TreeWindow):
        TreeWindow.setObjectName("BrowseFile")
        TreeWindow.resize(640, 480)
        TreeWindow.setWindowTitle("Browse File")
        self.model = QDirModel()
        self.tree = QTreeView()
        self.tree.setModel(self.model)
        self.tree.clicked.connect(self.store_file)

        # model = QDirModel()
        # tree = QTreeView()
        # tree.setModel(model)
        # tree.clicked.connect(self.store_file)

        self.show()

    def store_file(self, i):
        print(i.text())

if open_tree:
    tree_app = QtWidgets.QApplication(sys.argv)
    TreeWindow = QtWidgets.QMainWindow()
    tree_ui = Ui_TreeWindow()
    tree_ui.setupUi(TreeWindow)
    TreeWindow.show()
    sys.exit(tree_app.exec_())
    

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
